{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Deep-Daze-Colab-GDrive.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyPC7M8n6GhrQDX1vYLSeGIg",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "203d01e39ab04fc6be56256597d1004e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_da92359c70f94c4d8280b2dbb1e71fdd",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6a55ffd67ccb48238bdae7f53a871d4e",
              "IPY_MODEL_149e31eb2ec0412eb9f546f38ae37e3b"
            ]
          }
        },
        "da92359c70f94c4d8280b2dbb1e71fdd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6a55ffd67ccb48238bdae7f53a871d4e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6ec3f24a5869440e9eae2d3535a5249e",
            "_dom_classes": [],
            "description": "epochs:   0%",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 20,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 0,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4d8a5a01c3ef449da2fbf5df0ff3cd1f"
          }
        },
        "149e31eb2ec0412eb9f546f38ae37e3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_e8e40c6c15d64c0d858d3d2ed8f9f13f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0/20 [49:53&lt;?, ?it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_647c44cc2dc14b8ca0483b58f71fe66f"
          }
        },
        "6ec3f24a5869440e9eae2d3535a5249e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4d8a5a01c3ef449da2fbf5df0ff3cd1f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e8e40c6c15d64c0d858d3d2ed8f9f13f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "647c44cc2dc14b8ca0483b58f71fe66f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9dd38c3833cd4ddd96772d0b297c7a81": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_16f47f0ff9084285a13d6254fd0dd3c3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7e08454069b74f0081ac91247f9954c1",
              "IPY_MODEL_9aaf9beeecc7462d8548b99f4be72856"
            ]
          }
        },
        "16f47f0ff9084285a13d6254fd0dd3c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7e08454069b74f0081ac91247f9954c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_de4a40a11d8d4e0ab92d166c94e7e397",
            "_dom_classes": [],
            "description": "iteration:  99%",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1050,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1039,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ae1e9f7cd8c24db2971bf4a78f3631c3"
          }
        },
        "9aaf9beeecc7462d8548b99f4be72856": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_249b07555c1d44a58474b26e6e16042d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1038/1050 [53:52&lt;00:37,  3.11s/it]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_59c6d1306ce54d37a1761600effb5e8d"
          }
        },
        "de4a40a11d8d4e0ab92d166c94e7e397": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ae1e9f7cd8c24db2971bf4a78f3631c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "249b07555c1d44a58474b26e6e16042d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "59c6d1306ce54d37a1761600effb5e8d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jacopo090/deep-daze/blob/main/Deep_Daze_Colab_GDrive\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "csTJJqd-O_3a",
        "outputId": "97e78a9d-7db8-44f9-b0f6-8399c6b7a5fd"
      },
      "source": [
        "!nvidia-smi"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Sat Apr  3 10:31:58 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 460.67       Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   35C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "cellView": "form",
        "id": "eeEzVOzqPOId",
        "outputId": "c4fed939-846f-479a-c1ce-e467ac102a51"
      },
      "source": [
        "#@title Install PyTorch and Deep-Daze\n",
        "import subprocess\n",
        "\n",
        "CUDA_version = [s for s in subprocess.check_output([\"nvcc\", \"--version\"]).decode(\"UTF-8\").split(\", \") if s.startswith(\"release\")][0].split(\" \")[-1]\n",
        "print(\"CUDA version:\", CUDA_version)\n",
        "\n",
        "if CUDA_version == \"10.0\":\n",
        "    torch_version_suffix = \"+cu100\"\n",
        "elif CUDA_version == \"10.1\":\n",
        "    torch_version_suffix = \"+cu101\"\n",
        "elif CUDA_version == \"10.2\":\n",
        "    torch_version_suffix = \"\"\n",
        "else:\n",
        "    torch_version_suffix = \"+cu110\"\n",
        "\n",
        "! pip install torch==1.7.1{torch_version_suffix} torchvision==0.8.2{torch_version_suffix} -f https://download.pytorch.org/whl/torch_stable.html ftfy regex\n",
        "!pip install deep-daze"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "CUDA version: 11.0\n",
            "Looking in links: https://download.pytorch.org/whl/torch_stable.html\n",
            "Collecting torch==1.7.1+cu110\n",
            "\u001b[?25l  Downloading https://download.pytorch.org/whl/cu110/torch-1.7.1%2Bcu110-cp37-cp37m-linux_x86_64.whl (1156.8MB)\n",
            "\u001b[K     |███████████████████████         | 834.1MB 1.2MB/s eta 0:04:23tcmalloc: large alloc 1147494400 bytes == 0x55eb8972a000 @  0x7f40db053615 0x55eb4ff6f06c 0x55eb5004eeba 0x55eb4ff71e8d 0x55eb5006399d 0x55eb4ffe5fe9 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe5e50 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe286a 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb500e6431 0x55eb50047049 0x55eb4ffb1c84 0x55eb4ff728e9 0x55eb4ffe6ade 0x55eb4ff7369a 0x55eb4ffe1a45 0x55eb4ffe0e0d 0x55eb4ff7377a 0x55eb4ffe1a45 0x55eb4ff7369a 0x55eb4ffe1a45\n",
            "\u001b[K     |█████████████████████████████▏  | 1055.7MB 1.3MB/s eta 0:01:16tcmalloc: large alloc 1434370048 bytes == 0x55ebcdd80000 @  0x7f40db053615 0x55eb4ff6f06c 0x55eb5004eeba 0x55eb4ff71e8d 0x55eb5006399d 0x55eb4ffe5fe9 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe5e50 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe286a 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb4ffe1ee2 0x55eb500647c6 0x55eb500e6431 0x55eb50047049 0x55eb4ffb1c84 0x55eb4ff728e9 0x55eb4ffe6ade 0x55eb4ff7369a 0x55eb4ffe1a45 0x55eb4ffe0e0d 0x55eb4ff7377a 0x55eb4ffe1a45 0x55eb4ff7369a 0x55eb4ffe1a45\n",
            "\u001b[K     |████████████████████████████████| 1156.7MB 1.4MB/s eta 0:00:01tcmalloc: large alloc 1445945344 bytes == 0x55ec2356c000 @  0x7f40db053615 0x55eb4ff6f06c 0x55eb5004eeba 0x55eb4ff71e8d 0x55eb5006399d 0x55eb4ffe5fe9 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe1c9e 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe1c9e 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe1c9e 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe1c9e 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe1c9e 0x55eb4ff7369a 0x55eb4ffe1c9e 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe286a 0x55eb4ffe0b0e 0x55eb4ff7377a 0x55eb4ffe286a 0x55eb4ffe0b0e 0x55eb4ff73e11\n",
            "\u001b[K     |████████████████████████████████| 1156.8MB 16kB/s \n",
            "\u001b[?25hCollecting torchvision==0.8.2+cu110\n",
            "\u001b[?25l  Downloading https://download.pytorch.org/whl/cu110/torchvision-0.8.2%2Bcu110-cp37-cp37m-linux_x86_64.whl (12.9MB)\n",
            "\u001b[K     |████████████████████████████████| 12.9MB 237kB/s \n",
            "\u001b[?25hCollecting ftfy\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/04/06/e5c80e2e0f979628d47345efba51f7ba386fe95963b11c594209085f5a9b/ftfy-5.9.tar.gz (66kB)\n",
            "\u001b[K     |████████████████████████████████| 71kB 6.6MB/s \n",
            "\u001b[?25hRequirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (2019.12.20)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch==1.7.1+cu110) (3.7.4.3)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from torch==1.7.1+cu110) (1.19.5)\n",
            "Requirement already satisfied: pillow>=4.1.1 in /usr/local/lib/python3.7/dist-packages (from torchvision==0.8.2+cu110) (7.1.2)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from ftfy) (0.2.5)\n",
            "Building wheels for collected packages: ftfy\n",
            "  Building wheel for ftfy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for ftfy: filename=ftfy-5.9-cp37-none-any.whl size=46451 sha256=c8b1b655bc261b1b67357e2b27b5e3f011d71f206126f6721d9fb5b68e2640aa\n",
            "  Stored in directory: /root/.cache/pip/wheels/5e/2e/f0/b07196e8c929114998f0316894a61c752b63bfa3fdd50d2fc3\n",
            "Successfully built ftfy\n",
            "\u001b[31mERROR: torchtext 0.9.1 has requirement torch==1.8.1, but you'll have torch 1.7.1+cu110 which is incompatible.\u001b[0m\n",
            "Installing collected packages: torch, torchvision, ftfy\n",
            "  Found existing installation: torch 1.8.1+cu101\n",
            "    Uninstalling torch-1.8.1+cu101:\n",
            "      Successfully uninstalled torch-1.8.1+cu101\n",
            "  Found existing installation: torchvision 0.9.1+cu101\n",
            "    Uninstalling torchvision-0.9.1+cu101:\n",
            "      Successfully uninstalled torchvision-0.9.1+cu101\n",
            "Successfully installed ftfy-5.9 torch-1.7.1+cu110 torchvision-0.8.2+cu110\n",
            "Collecting deep-daze\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/29/09/71b94e64befd8c27df9586648301d8c89230774fc49bd50a4b7a24bae92b/deep_daze-0.9.0-py3-none-any.whl (1.4MB)\n",
            "\u001b[K     |████████████████████████████████| 1.4MB 10.5MB/s \n",
            "\u001b[?25hCollecting imageio>=2.9.0\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/6e/57/5d899fae74c1752f52869b613a8210a2480e1a69688e65df6cb26117d45d/imageio-2.9.0-py3-none-any.whl (3.3MB)\n",
            "\u001b[K     |████████████████████████████████| 3.3MB 52.1MB/s \n",
            "\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from deep-daze) (4.41.1)\n",
            "Collecting torch-optimizer\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/af/0f/bc49a0f714a1896b80f31db9ba82eebcb2bad9e0f5757184574f8ecfe2f1/torch_optimizer-0.1.0-py3-none-any.whl (72kB)\n",
            "\u001b[K     |████████████████████████████████| 81kB 10.5MB/s \n",
            "\u001b[?25hCollecting fire\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/11/07/a119a1aa04d37bc819940d95ed7e135a7dcca1c098123a3764a6dcace9e7/fire-0.4.0.tar.gz (87kB)\n",
            "\u001b[K     |████████████████████████████████| 92kB 12.4MB/s \n",
            "\u001b[?25hCollecting einops>=0.3\n",
            "  Downloading https://files.pythonhosted.org/packages/5d/a0/9935e030634bf60ecd572c775f64ace82ceddf2f504a5fd3902438f07090/einops-0.3.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: regex in /usr/local/lib/python3.7/dist-packages (from deep-daze) (2019.12.20)\n",
            "Requirement already satisfied: torch>=1.7.1 in /usr/local/lib/python3.7/dist-packages (from deep-daze) (1.7.1+cu110)\n",
            "Collecting siren-pytorch>=0.0.8\n",
            "  Downloading https://files.pythonhosted.org/packages/3b/80/e023803feacfb9ea395c80693bb57f0a58a61699eda8afead5de92796bbb/siren_pytorch-0.0.9-py3-none-any.whl\n",
            "Requirement already satisfied: torchvision>=0.8.2 in /usr/local/lib/python3.7/dist-packages (from deep-daze) (0.8.2+cu110)\n",
            "Requirement already satisfied: ftfy in /usr/local/lib/python3.7/dist-packages (from deep-daze) (5.9)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from imageio>=2.9.0->deep-daze) (1.19.5)\n",
            "Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from imageio>=2.9.0->deep-daze) (7.1.2)\n",
            "Collecting pytorch-ranger>=0.1.1\n",
            "  Downloading https://files.pythonhosted.org/packages/0d/70/12256257d861bbc3e176130d25be1de085ce7a9e60594064888a950f2154/pytorch_ranger-0.1.1-py3-none-any.whl\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from fire->deep-daze) (1.15.0)\n",
            "Requirement already satisfied: termcolor in /usr/local/lib/python3.7/dist-packages (from fire->deep-daze) (1.1.0)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.7.1->deep-daze) (3.7.4.3)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from ftfy->deep-daze) (0.2.5)\n",
            "Building wheels for collected packages: fire\n",
            "  Building wheel for fire (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for fire: filename=fire-0.4.0-py2.py3-none-any.whl size=115928 sha256=a35205561ce9ddf2e4ca7d01f4b677adbfbfdecb591ff69927570bc5ac45b1ea\n",
            "  Stored in directory: /root/.cache/pip/wheels/af/19/30/1ea0cad502dcb4e66ed5a690279628c827aea38bbbab75d5ed\n",
            "Successfully built fire\n",
            "\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Installing collected packages: imageio, pytorch-ranger, torch-optimizer, fire, einops, siren-pytorch, deep-daze\n",
            "  Found existing installation: imageio 2.4.1\n",
            "    Uninstalling imageio-2.4.1:\n",
            "      Successfully uninstalled imageio-2.4.1\n",
            "Successfully installed deep-daze-0.9.0 einops-0.3.0 fire-0.4.0 imageio-2.9.0 pytorch-ranger-0.1.1 siren-pytorch-0.0.9 torch-optimizer-0.1.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lLvNOGrpPXno",
        "outputId": "a047a2c8-e0f0-4139-b0a1-c65a92e3cbae"
      },
      "source": [
        "#@title Mount Google Drive\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "print('Google Drive connected.')\n",
        "!mkdir '/content/drive/MyDrive/DeepDaze/'"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n",
            "Google Drive connected.\n",
            "mkdir: cannot create directory ‘/content/drive/MyDrive/DeepDaze/’: File exists\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 540,
          "referenced_widgets": [
            "203d01e39ab04fc6be56256597d1004e",
            "da92359c70f94c4d8280b2dbb1e71fdd",
            "6a55ffd67ccb48238bdae7f53a871d4e",
            "149e31eb2ec0412eb9f546f38ae37e3b",
            "6ec3f24a5869440e9eae2d3535a5249e",
            "4d8a5a01c3ef449da2fbf5df0ff3cd1f",
            "e8e40c6c15d64c0d858d3d2ed8f9f13f",
            "647c44cc2dc14b8ca0483b58f71fe66f",
            "9dd38c3833cd4ddd96772d0b297c7a81",
            "16f47f0ff9084285a13d6254fd0dd3c3",
            "7e08454069b74f0081ac91247f9954c1",
            "9aaf9beeecc7462d8548b99f4be72856",
            "de4a40a11d8d4e0ab92d166c94e7e397",
            "ae1e9f7cd8c24db2971bf4a78f3631c3",
            "249b07555c1d44a58474b26e6e16042d",
            "59c6d1306ce54d37a1761600effb5e8d"
          ]
        },
        "id": "oqzTNUcRPfXt",
        "outputId": "ebe89df8-f622-4dbe-bf5e-60d87f27d6c5"
      },
      "source": [
        "from tqdm import tqdm\n",
        "from tqdm.notebook import trange\n",
        "from IPython.display import Image, display\n",
        "import shutil\n",
        "\n",
        "from deep_daze import Imagine\n",
        "\n",
        "save_path = '/content/drive/MyDrive/DeepDaze/' #@param {type:\"string\"}\n",
        "TEXT = 'summer night white chairs and friends' #@param {type:\"string\"}\n",
        "sub_dir = False #@param {type:\"boolean\"}\n",
        "TEXT_PATH = TEXT.replace(\" \", \"_\")\n",
        "NUM_LAYERS = 32 #@param {type:\"number\"}\n",
        "IMAGE_WIDTH = 512 #@param {type:\"number\"}\n",
        "SAVE_EVERY = 80 #@param {type:\"number\"}\n",
        "SAVE_PROGRESS = True #@param {type:\"boolean\"}\n",
        "LEARNING_RATE = 1e-5 #@param {type:\"number\"}\n",
        "ITERATIONS = 1050 #@param {type:\"number\"}\n",
        "EPOCH = 20 #@param {type:\"number\"}\n",
        "\n",
        "if sub_dir:\n",
        "  save_path = save_path + f\"/{TEXT_PATH}\"\n",
        "  !mkdir f'/content/drive/MyDrive/DeepDaze/{TEXT_PATH}'\n",
        "\n",
        "model = Imagine(\n",
        "    text = TEXT,\n",
        "    num_layers = NUM_LAYERS,\n",
        "    save_every = SAVE_EVERY,\n",
        "    lr = LEARNING_RATE,\n",
        "    iterations = ITERATIONS,\n",
        "    image_width = IMAGE_WIDTH,\n",
        ")\n",
        "\n",
        "# without heavy printing and saving images to drive\n",
        "for epoch in trange(EPOCH, desc = \"epochs\"):\n",
        "    for i in trange(ITERATIONS, desc = \"iteration\"):\n",
        "        model.train_step(epoch, i)\n",
        "\n",
        "        if i % model.save_every != 0:\n",
        "            continue\n",
        "\n",
        "        file_end = str(\"_\"+str(epoch)+\"_\"+str(i)+\".jpg\")\n",
        "        source = f'{TEXT_PATH}.jpg'\n",
        "        destination = f'{save_path}{TEXT_PATH}{file_end}'\n",
        "        print(source, destination)\n",
        "        shutil.move(source, destination)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading ViT-B-32.pt: 100%|██████████| 354M/354M [00:05<00:00, 59.8MiB/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "203d01e39ab04fc6be56256597d1004e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, description='epochs', max=20.0, style=ProgressStyle(description_width=…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9dd38c3833cd4ddd96772d0b297c7a81",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, description='iteration', max=1050.0, style=ProgressStyle(description_w…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\r\rimage updated at \"./summer_night_white_chairs_and_friends.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_0.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000001.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_80.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000002.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_160.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000003.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_240.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000004.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_320.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000005.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_400.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000006.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_480.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000007.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_560.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000008.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_640.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000009.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_720.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000010.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_800.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000011.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_880.jpg\n",
            "image updated at \"./summer_night_white_chairs_and_friends.000012.jpg\"\n",
            "summer_night_white_chairs_and_friends.jpg /content/drive/MyDrive/DeepDaze/summer_night_white_chairs_and_friends_0_960.jpg\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}